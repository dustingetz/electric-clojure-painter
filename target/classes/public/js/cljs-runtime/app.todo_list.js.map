{"version":3,"sources":["app/todo_list.cljc"],"mappings":";AAYA,AAAKA,yBAAS,6CAAA,7CAACC;AAEf,AAAKC,0BAAU,6CAAA,7CAACD;AAEhB,AAAKE,8BAAc,6CAAA,7CAACF;AAEpB,uBAAA,oFAAA,eAAA,eAAA,eAAA,eAAA,eAAA,eAAA,eAAA,eAAA,eAAA,eAAA,eAAA,eAAA,eAAA,eAAA,eAAA,iCAAA,7WAAKG;AAEL,AAiDA","names":["app.todo-list/vertices","cljs.core.atom","app.todo-list/mousedown","app.todo-list/current-emoji","app.todo-list/emojis"],"sourcesContent":["(ns app.todo-list\n\n  ; trick shadow into ensuring that client/server always have the same version\n  ; all .cljc files containing Electric code must have this line!\n  #?(:cljs (:require-macros app.todo-list)) ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n\n  (:require #?(:clj [datascript.core :as d]) ; database on server\n            [hyperfiddle.electric :as e]\n            [hyperfiddle.electric-dom2 :as dom]\n            [hyperfiddle.electric-ui4 :as ui]\n            [clojure.string :as str]))\n\n(def vertices (atom []))\n\n(def mousedown (atom false))\n\n(def current-emoji (atom \"\ud83d\udc31\"))\n\n(def emojis [\"\ud83d\udc31\" \"\ud83e\udee5\" \"\ud83d\udc1e\" \"\ud83e\ude99\" \"\ud83d\udd49\" \"\ud83d\udc0d\" \"\ud83d\udcde\" \"\ud83c\udf00\" \"\ud83c\udf30\" \"\ud83d\udd78\" \"\ud83d\udc36\" \"\ud83d\udc2d\" \"\ud83d\udc39\" \"\ud83e\uddff\" \"\u267b\ufe0f\" \"\ud83c\udff4\u200d\u2620\ufe0f\" \"\ud83e\uddec\"])\n\n(e/defn Canvas []\n  (dom/style {:margin \"0\"\n              :overflow \"hidden\"\n              :background \"lightblue\"                    \n              :user-select \"none\"\n              :font-size \"30px\"})\n  (dom/div\n   (dom/style {:width \"100vw\"\n               :height \"100vh\"})\n   (dom/on \"mousedown\" (e/fn [e] (reset! mousedown true)))\n   (dom/on \"mouseup\" (e/fn [e] (reset! mousedown false)))\n   (dom/on \"mousemove\" (e/fn [e] (let [x (.-clientX e)\n                                       y (.-clientY e)\n                                       m (e/watch mousedown)\n                                       e (e/watch current-emoji)]\n                                   (e/server\n                                    (when m\n                                      (swap! vertices (fn [v] \n                                                        (take 10000\n                                                              (conj v [x y e])))))))))\n   (dom/div\n    (dom/style {:background \"#0003\"\n                :position \"fixed\"\n                :top \"0\"\n                :left \"0\"\n                :height \"100vh\"\n                :padding \"10px\"})\n    (e/for [emoji emojis]\n      (dom/div\n       (dom/style {:cursor \"pointer\"})\n       (dom/on \"click\" (e/fn [e] (reset! current-emoji emoji)))\n       (dom/text emoji)))\n    (dom/div\n     (dom/style {:cursor \"pointer\" :padding-top \"50px\"})\n     (dom/on \"click\" (e/fn [e] (e/server (reset! vertices []))))\n     (dom/text \"\ud83d\uddd1\ufe0f\")))\n   (dom/div\n    (e/for [vertex (e/server (reverse (e/watch vertices)))]\n      (dom/div\n       (dom/text (last vertex))\n       (dom/style {:position \"absolute\"\n                   :left (str (first vertex) \"px\")\n                   :top (str (second vertex) \"px\")\n                   :width \"10px\"\n                   :height \"10px\"\n                   :user-select \"none\"\n                   :z-index \"-1\"\n                   :pointer-events \"none\"}))))))\n\n(comment\n  @!vertices\n  (reset! !vertices [[1 2] [3 4]])\n  @emoji\n  )"]}